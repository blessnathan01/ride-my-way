{"ast":null,"code":"var _jsxFileName = \"F:\\\\Andela_2019\\\\ride-my-react\\\\src\\\\SignIn\\\\AsDriver.js\";\nimport React, { Component } from \"react\";\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\nimport \"./driver.css\";\nimport \"../fonts.css\";\nimport Index from \"../Home/Index\";\nimport Credential from \"./\";\n\nclass AsDriver extends React {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      credentials: [{\n        username: \"Blessing\",\n        password: \"1234\"\n      }]\n    };\n\n    this.onSubmitTask = event => {\n      event.preventDefault();\n      const credential = {\n        username: event.target[0].value,\n        password: event.target[1].value\n      };\n      const credentialList = [credential].concat(this.state.credentials);\n      this.setState({\n        credentials: credentialList\n      });\n    };\n\n    this.onComplete = index => {\n      console.log(index);\n      const updateCredentials = [].concat(this.state.credentials);\n      updateCredentials[index].isComplete = true;\n      this.setState({\n        credentials: updateCredentials\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"body-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/../Home/Index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      size: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Ride My Way\"))))), React.createElement(\"form\", {\n      onSubmit: this.onSubmitTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Log in\")), this.state.credentials.map((credential, index) => React.createElement(Credential, {\n      index: index,\n      description: credential.username,\n      time: credential.password,\n      onComplete: this.onComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Index, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AsDriver;","map":{"version":3,"sources":["F:\\Andela_2019\\ride-my-react\\src\\SignIn\\AsDriver.js"],"names":["React","Component","Switch","BrowserRouter","Route","Index","Credential","AsDriver","state","credentials","username","password","onSubmitTask","event","preventDefault","credential","target","value","credentialList","concat","setState","onComplete","index","console","log","updateCredentials","isComplete","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"./driver.css\";\r\nimport \"../fonts.css\";\r\nimport Index from \"../Home/Index\";\r\nimport Credential from \"./\"\r\n\r\nclass AsDriver extends React {\r\n  state = {\r\n    credentials: [\r\n      {\r\n        username: \"Blessing\",\r\n        password: \"1234\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  onSubmitTask = event => {\r\n    event.preventDefault();\r\n\r\n    const credential = {\r\n      username: event.target[0].value,\r\n      password: event.target[1].value\r\n    };\r\n\r\n    const credentialList = [credential].concat(this.state.credentials);\r\n\r\n    this.setState({ credentials: credentialList });\r\n  };\r\n\r\n  onComplete = index => {\r\n    console.log(index);\r\n    const updateCredentials = [].concat(this.state.credentials);\r\n    updateCredentials[index].isComplete = true;\r\n\r\n    this.setState({ credentials: updateCredentials });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body-in\">\r\n        <nav>\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/../Home/Index\">\r\n                <font size=\"6\">Ride My Way</font>\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </nav>\r\n        {/* form */}\r\n        <form onSubmit={this.onSubmitTask}>\r\n          <div>\r\n            <input type=\"text\" name=\"username\" />\r\n          </div>\r\n          <div>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button type=\"submit\">Log in</button>\r\n        </form>\r\n        {/* end form */}\r\n        {/* credential list */}\r\n        {this.state.credentials.map((credential, index) => (\r\n          <Credential\r\n            index={index}\r\n            description={credential.username}\r\n            time={credential.password}\r\n            onComplete={this.onComplete}\r\n          />\r\n        ))}\r\n        <Index />\r\n        {/* end credential list */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsDriver;\r\n"]},"metadata":{},"sourceType":"module"}